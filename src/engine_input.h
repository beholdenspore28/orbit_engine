#ifndef ENGINE_INPUT_H
#define ENGINE_INPUT_H

#ifdef ENGINE_GLX
enum {
  ENGINE_KEY_BACKSPACE = XK_BackSpace,
  ENGINE_KEY_TAB = XK_Tab,
  ENGINE_KEY_RETURN = XK_Return,
  ENGINE_KEY_PAUSE = XK_Pause,
  ENGINE_KEY_SCROLL_LOCK = XK_Scroll_Lock,
  ENGINE_KEY_ESCAPE = XK_Escape,
  ENGINE_KEY_DELETE = XK_Delete,

  ENGINE_KEY_HOME = XK_Home,
  ENGINE_KEY_LEFT = XK_Left,
  ENGINE_KEY_RIGHT = XK_Right,
  ENGINE_KEY_UP = XK_Up,
  ENGINE_KEY_DOWN = XK_Down,
  ENGINE_KEY_PAGE_UP = XK_Page_Up,
  ENGINE_KEY_PAGE_DOWN = XK_Page_Down,
  ENGINE_KEY_END = XK_End,

  ENGINE_KEY_PRINT = XK_Print,
  ENGINE_KEY_INSERT = XK_Insert,
  ENGINE_KEY_MENU = XK_Menu,
  ENGINE_KEY_BREAK = XK_Break,
  ENGINE_KEY_NUM_LOCK = XK_Num_Lock,

  ENGINE_KEY_NUMPAD_SPACE = XK_KP_Space,
  ENGINE_KEY_NUMPAD_TAB = XK_KP_Tab,
  ENGINE_KEY_NUMPAD_ENTER = XK_KP_Enter,
  ENGINE_KEY_NUMPAD_F1 = XK_KP_F1,
  ENGINE_KEY_NUMPAD_F2 = XK_KP_F2,
  ENGINE_KEY_NUMPAD_F3 = XK_KP_F3,
  ENGINE_KEY_NUMPAD_F4 = XK_KP_F4,
  ENGINE_KEY_NUMPAD_HOME = XK_KP_Home,
  ENGINE_KEY_NUMPAD_LEFT = XK_KP_Left,
  ENGINE_KEY_NUMPAD_RIGHT = XK_KP_Right,
  ENGINE_KEY_NUMPAD_UP = XK_KP_Up,
  ENGINE_KEY_NUMPAD_DOWN = XK_KP_Down,
  ENGINE_KEY_NUMPAD_PAGE_UP = XK_KP_Page_Up,
  ENGINE_KEY_NUMPAD_PAGE_DOWN = XK_KP_Page_Down,
  ENGINE_KEY_NUMPAD_END = XK_KP_End,
  ENGINE_KEY_NUMPAD_INSERT = XK_KP_Insert,
  ENGINE_KEY_NUMPAD_DELETE = XK_KP_Delete,
  ENGINE_KEY_NUMPAD_EQUAL = XK_KP_Equal,
  ENGINE_KEY_NUMPAD_MULTIPLY = XK_KP_Multiply,
  ENGINE_KEY_NUMPAD_ADD = XK_KP_Add,
  ENGINE_KEY_NUMPAD_SUBTRACT = XK_KP_Subtract,
  ENGINE_KEY_NUMPAD_DECIMAL = XK_KP_Decimal,
  ENGINE_KEY_NUMPAD_DIVIDE = XK_KP_Divide,
};

enum { INPUT_KEYS_MAX = 256 };
extern int input_keys[INPUT_KEYS_MAX];

#endif // ENGINE_GLX

#endif // ENGINE_INPUT_H
